if - Anweisungen

Die überprüfung einer oder mehrerer bedinungen findet in if-blöcken statt.
Müssen mehrerer bedingungen überprüft werden, dann findet eine Verknüpfung mit dem Und-operator statt:

			if typ.is_a?(String) && typ.size > 2
			Es müssen beide Bedingungen true sein, damit die Anweisungen in dem Block ausgeführt werden.

Muss von mehreren Bedingungen eine zutreffen ist die Verwendungen des Oder-operators sinnvoll:
			if bedingung1 || bedingung2
			Wenn einer der Bedingungen zutrifft werden die Anweisungen im Block ausgeführt


if - elsif - else -end KONSTRUKT:
			def typ=(typ)

				if !typ.is_a?(String)
					puts "war kein String"
				elsif typ.size < 3
					puts "String zu kurz"
				else
					@typ = typ.capitalize 
			end

Kurzform der if-Anweisung:
	def ps=(ps)
			@ps = ps if ps > 0
		end

	Steht am Ende einer Anweisung (in der gleichen Zeile) eine if-Bedinung, dann wird die vorgehende Anweisung (z.b.:Zuordnung eines Wertes) nur ausgeführt, wenn die Bedingun true ist.

Ternärer Operator:
	Es gibt die Möglichkeit einen if-else-Block in einer Zeile auszuführen:
		puts car.typ.== ""? "Kein Wert" : car.typ

	Die Anweisung puts, also erzeuge eine Ausgabe, bekommt den Wert 'Kein Wert' falls die Bedingung 'puts car.typ == ""' leer ist; bzw. den aktuellen
	Objekt-Wert für 'typ' falls dieser gefüllt ist

	Das Fragezeichen ist ein operatior der die linksstehende Bedingunge von den auszuführenden Anweisungen trennt.
	Der Doppelpunkt fungiert als Kurzform von 'else'